{"ast":null,"code":"import React from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCircleCheck,faPen,faTrashCan}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ToDo=function ToDo(_ref){var toDo=_ref.toDo,markDone=_ref.markDone,setUpdateData=_ref.setUpdateData,deleteTask=_ref.deleteTask;return/*#__PURE__*/_jsx(_Fragment,{children:toDo&&toDo.sort(function(a,b){return a.id>b.id?1:-1;}).map(function(task,index){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"col taskBg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:task.status?'done':'',children:[/*#__PURE__*/_jsx(\"span\",{className:\"taskNumber\",children:index+1}),/*#__PURE__*/_jsx(\"span\",{className:\"taskText\",children:task.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"iconsWrap\",children:[/*#__PURE__*/_jsx(\"span\",{title:\"Completed / Not Completed\",onClick:function onClick(e){return markDone(task.id);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCircleCheck})}),task.status?null:/*#__PURE__*/_jsx(\"span\",{title:\"Edit\",onClick:function onClick(){return setUpdateData(task);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPen})}),/*#__PURE__*/_jsx(\"span\",{title:\"Delete\",onClick:function onClick(){return deleteTask(task.id);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faTrashCan})})]})]})},task.id);})});};export default ToDo;","map":{"version":3,"sources":["C:/Users/Iqbal Alfajar/Documents/DTS/IqbalAlfajar_ToDoList/src/components/ToDo.jsx"],"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","ToDo","toDo","markDone","setUpdateData","deleteTask","sort","a","b","id","map","task","index","status","title","e"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OACEC,aADF,CACiBC,KADjB,CACwBC,UADxB,KAEO,mCAFP,C,6IAIA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAmD,IAAhDC,CAAAA,IAAgD,MAAhDA,IAAgD,CAA1CC,QAA0C,MAA1CA,QAA0C,CAAhCC,aAAgC,MAAhCA,aAAgC,CAAjBC,UAAiB,MAAjBA,UAAiB,CAC9D,mBACE,yBACGH,IAAI,EAAIA,IAAI,CACZI,IADQ,CACH,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,EAAF,CAAOD,CAAC,CAACC,EAAT,CAAc,CAAd,CAAkB,CAAC,CAA7B,EADG,EAERC,GAFQ,CAEH,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACrB,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,aAAK,SAAS,CAAGD,IAAI,CAACE,MAAL,CAAc,MAAd,CAAuB,EAAxC,wBACE,aAAM,SAAS,CAAC,YAAhB,UAA8BD,KAAK,CAAG,CAAtC,EADF,cAEE,aAAM,SAAS,CAAC,UAAhB,UAA4BD,IAAI,CAACG,KAAjC,EAFF,GADF,cAKE,aAAK,SAAS,CAAC,WAAf,wBACE,aAAM,KAAK,CAAC,2BAAZ,CACE,OAAO,CAAG,iBAACC,CAAD,QAAOZ,CAAAA,QAAQ,CAACQ,IAAI,CAACF,EAAN,CAAf,EADZ,uBAGE,KAAC,eAAD,EAAiB,IAAI,CAAEX,aAAvB,EAHF,EADF,CAOGa,IAAI,CAACE,MAAL,CAAc,IAAd,cACC,aAAM,KAAK,CAAC,MAAZ,CACE,OAAO,CAAG,yBAAMT,CAAAA,aAAa,CAACO,IAAD,CAAnB,EADZ,uBAGE,KAAC,eAAD,EAAiB,IAAI,CAAEZ,KAAvB,EAHF,EARJ,cAeE,aAAM,KAAK,CAAC,QAAZ,CACE,OAAO,CAAE,yBAAMM,CAAAA,UAAU,CAACM,IAAI,CAACF,EAAN,CAAhB,EADX,uBAGE,KAAC,eAAD,EAAiB,IAAI,CAAET,UAAvB,EAHF,EAfF,GALF,GADF,EAAqBW,IAAI,CAACF,EAA1B,CADF,CA+BD,CAlCQ,CADX,EADF,CAwCD,CAzCD,CA2CA,cAAeR,CAAAA,IAAf","sourcesContent":["import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faCircleCheck, faPen, faTrashCan\n} from '@fortawesome/free-solid-svg-icons'\n\nconst ToDo = ({ toDo, markDone, setUpdateData, deleteTask }) => {\n  return(\n    <>\n      {toDo && toDo\n      .sort((a, b) => a.id > b.id ? 1 : -1)\n      .map( (task, index) => {\n        return(\n          <React.Fragment key={task.id}>\n            <div className=\"col taskBg\">\n              <div className={ task.status ? 'done' : '' }>\n                <span className=\"taskNumber\">{index + 1}</span>\n                <span className=\"taskText\">{task.title}</span>\n              </div>\n              <div className=\"iconsWrap\">\n                <span title=\"Completed / Not Completed\"\n                  onClick={ (e) => markDone(task.id) }\n                >\n                  <FontAwesomeIcon icon={faCircleCheck} />\n                </span>\n\n                {task.status ? null : (\n                  <span title=\"Edit\"\n                    onClick={ () => setUpdateData(task) }\n                  >\n                    <FontAwesomeIcon icon={faPen} />\n                  </span>\n                )}\n\n                <span title=\"Delete\"\n                  onClick={() => deleteTask(task.id)}\n                >\n                  <FontAwesomeIcon icon={faTrashCan} />\n                </span>\n              </div>\n            </div>\n          </React.Fragment>\n        )\n      })\n      }  \n    </>\n  )\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}